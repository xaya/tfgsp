/*
    GSP for the TF blockchain game
    Copyright (C) 2020  Autonomous Worlds Ltd

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

syntax = "proto2";
option cc_enable_arenas = true;

import "proto/ongoing.proto";

package pxd.proto;

/**
 * General data associated to an xaya name account.
 */
message XayaPlayer
{
  optional uint32 notused = 1;
    
  /**
   * Role of the XAYA name in relation to the game
   */
  optional uint32 role = 2;
  
  /**
   * vCHI based value
   */ 
  optional uint64 balance = 3;
  
  /**
   * Balance of vCHI minted through the burnsale, which corresponds to
   * the balance that will be carried over to the full game.
   */
  optional uint64 burnsale_balance = 4;  
  
  /**
   * The XAYA name itself
   */
  optional string xayaname = 5;  
  
  /**
   * Current tutorial state
   */
  optional uint32 ftuestate = 6; 
  
  /**
   * Stores all operations that takes several blocks to resolve
   */  
  repeated OngoinOperation ongoings = 7;
  
  /**
   * Tournaments bookeeping entry
   */
  optional uint32 TournamentsCompleted = 8;   
  
  /**
   * Tournaments bookeeping entry
   */
  optional uint32 TournamentsWon = 9;    
  
  
  /**
   * Values, used in prestige calculation, to show in the front-end
   */
  optional uint32 ValueEpic = 10;
  optional uint32 ValueRare = 11;  
  optional uint32 ValueUncommon = 12;  
  optional uint32 ValueCommon = 13;
  optional uint32 FighterAverage = 14; 
  optional uint32 TournamentPerformance = 15;
  
  /**
   * Each time special tournament passed, for each player we re-calculate the tier he applicaple to join to
   */  
  optional uint32 SpecialTournamentPrestigeTier = 16;  
}
