// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/armor_piece.proto

#include "proto/armor_piece.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pxd {
namespace proto {
constexpr ArmorPiece::ArmorPiece(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : candy_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , armortype_(0u)
  , rewardsource_(0u)
  , rewardsourceid_(0u){}
struct ArmorPieceDefaultTypeInternal {
  constexpr ArmorPieceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArmorPieceDefaultTypeInternal() {}
  union {
    ArmorPiece _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArmorPieceDefaultTypeInternal _ArmorPiece_default_instance_;
}  // namespace proto
}  // namespace pxd
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2farmor_5fpiece_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2farmor_5fpiece_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2farmor_5fpiece_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2farmor_5fpiece_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, candy_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, armortype_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, rewardsource_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::ArmorPiece, rewardsourceid_),
  0,
  1,
  2,
  3,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::pxd::proto::ArmorPiece)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pxd::proto::_ArmorPiece_default_instance_),
};

const char descriptor_table_protodef_proto_2farmor_5fpiece_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027proto/armor_piece.proto\022\tpxd.proto\032\"pr"
  "oto/fighter_move_blueprint.proto\"\\\n\nArmo"
  "rPiece\022\r\n\005Candy\030\001 \001(\t\022\021\n\tArmorType\030\002 \001(\r"
  "\022\024\n\014RewardSource\030\003 \001(\r\022\026\n\016RewardSourceID"
  "\030\004 \001(\rB\003\370\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2farmor_5fpiece_2eproto_deps[1] = {
  &::descriptor_table_proto_2ffighter_5fmove_5fblueprint_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2farmor_5fpiece_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2farmor_5fpiece_2eproto = {
  false, false, 171, descriptor_table_protodef_proto_2farmor_5fpiece_2eproto, "proto/armor_piece.proto", 
  &descriptor_table_proto_2farmor_5fpiece_2eproto_once, descriptor_table_proto_2farmor_5fpiece_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_proto_2farmor_5fpiece_2eproto::offsets,
  file_level_metadata_proto_2farmor_5fpiece_2eproto, file_level_enum_descriptors_proto_2farmor_5fpiece_2eproto, file_level_service_descriptors_proto_2farmor_5fpiece_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_proto_2farmor_5fpiece_2eproto_getter() {
  return &descriptor_table_proto_2farmor_5fpiece_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_proto_2farmor_5fpiece_2eproto(&descriptor_table_proto_2farmor_5fpiece_2eproto);
namespace pxd {
namespace proto {

// ===================================================================

class ArmorPiece::_Internal {
 public:
  using HasBits = decltype(std::declval<ArmorPiece>()._has_bits_);
  static void set_has_candy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_armortype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rewardsource(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rewardsourceid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

ArmorPiece::ArmorPiece(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pxd.proto.ArmorPiece)
}
ArmorPiece::ArmorPiece(const ArmorPiece& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  candy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_candy()) {
    candy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_candy(), 
      GetArena());
  }
  ::memcpy(&armortype_, &from.armortype_,
    static_cast<size_t>(reinterpret_cast<char*>(&rewardsourceid_) -
    reinterpret_cast<char*>(&armortype_)) + sizeof(rewardsourceid_));
  // @@protoc_insertion_point(copy_constructor:pxd.proto.ArmorPiece)
}

void ArmorPiece::SharedCtor() {
candy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&armortype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rewardsourceid_) -
    reinterpret_cast<char*>(&armortype_)) + sizeof(rewardsourceid_));
}

ArmorPiece::~ArmorPiece() {
  // @@protoc_insertion_point(destructor:pxd.proto.ArmorPiece)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArmorPiece::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  candy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ArmorPiece::ArenaDtor(void* object) {
  ArmorPiece* _this = reinterpret_cast< ArmorPiece* >(object);
  (void)_this;
}
void ArmorPiece::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArmorPiece::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArmorPiece::Clear() {
// @@protoc_insertion_point(message_clear_start:pxd.proto.ArmorPiece)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    candy_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&armortype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rewardsourceid_) -
        reinterpret_cast<char*>(&armortype_)) + sizeof(rewardsourceid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArmorPiece::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string Candy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_candy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pxd.proto.ArmorPiece.Candy");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 ArmorType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_armortype(&has_bits);
          armortype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 RewardSource = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_rewardsource(&has_bits);
          rewardsource_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 RewardSourceID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_rewardsourceid(&has_bits);
          rewardsourceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArmorPiece::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pxd.proto.ArmorPiece)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Candy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_candy().data(), static_cast<int>(this->_internal_candy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pxd.proto.ArmorPiece.Candy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_candy(), target);
  }

  // optional uint32 ArmorType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_armortype(), target);
  }

  // optional uint32 RewardSource = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rewardsource(), target);
  }

  // optional uint32 RewardSourceID = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rewardsourceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pxd.proto.ArmorPiece)
  return target;
}

size_t ArmorPiece::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pxd.proto.ArmorPiece)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string Candy = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_candy());
    }

    // optional uint32 ArmorType = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_armortype());
    }

    // optional uint32 RewardSource = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rewardsource());
    }

    // optional uint32 RewardSourceID = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rewardsourceid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmorPiece::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pxd.proto.ArmorPiece)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmorPiece* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArmorPiece>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pxd.proto.ArmorPiece)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pxd.proto.ArmorPiece)
    MergeFrom(*source);
  }
}

void ArmorPiece::MergeFrom(const ArmorPiece& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pxd.proto.ArmorPiece)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_candy(from._internal_candy());
    }
    if (cached_has_bits & 0x00000002u) {
      armortype_ = from.armortype_;
    }
    if (cached_has_bits & 0x00000004u) {
      rewardsource_ = from.rewardsource_;
    }
    if (cached_has_bits & 0x00000008u) {
      rewardsourceid_ = from.rewardsourceid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ArmorPiece::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pxd.proto.ArmorPiece)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmorPiece::CopyFrom(const ArmorPiece& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pxd.proto.ArmorPiece)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmorPiece::IsInitialized() const {
  return true;
}

void ArmorPiece::InternalSwap(ArmorPiece* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  candy_.Swap(&other->candy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArmorPiece, rewardsourceid_)
      + sizeof(ArmorPiece::rewardsourceid_)
      - PROTOBUF_FIELD_OFFSET(ArmorPiece, armortype_)>(
          reinterpret_cast<char*>(&armortype_),
          reinterpret_cast<char*>(&other->armortype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArmorPiece::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proto_2farmor_5fpiece_2eproto_getter, &descriptor_table_proto_2farmor_5fpiece_2eproto_once,
      file_level_metadata_proto_2farmor_5fpiece_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace pxd
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pxd::proto::ArmorPiece* Arena::CreateMaybeMessage< ::pxd::proto::ArmorPiece >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pxd::proto::ArmorPiece >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
