// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/xaya_player.proto

#include "proto/xaya_player.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pxd {
namespace proto {
constexpr XayaPlayer::XayaPlayer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xayaname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , notused_(0u)
  , role_(0u)
  , balance_(PROTOBUF_ULONGLONG(0))
  , burnsale_balance_(PROTOBUF_ULONGLONG(0)){}
struct XayaPlayerDefaultTypeInternal {
  constexpr XayaPlayerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~XayaPlayerDefaultTypeInternal() {}
  union {
    XayaPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT XayaPlayerDefaultTypeInternal _XayaPlayer_default_instance_;
}  // namespace proto
}  // namespace pxd
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fxaya_5fplayer_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fxaya_5fplayer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fxaya_5fplayer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fxaya_5fplayer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, notused_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, role_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, balance_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, burnsale_balance_),
  PROTOBUF_FIELD_OFFSET(::pxd::proto::XayaPlayer, xayaname_),
  1,
  2,
  3,
  4,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::pxd::proto::XayaPlayer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pxd::proto::_XayaPlayer_default_instance_),
};

const char descriptor_table_protodef_proto_2fxaya_5fplayer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027proto/xaya_player.proto\022\tpxd.proto\"h\n\n"
  "XayaPlayer\022\017\n\007notused\030\001 \001(\r\022\014\n\004role\030\002 \001("
  "\r\022\017\n\007balance\030\003 \001(\004\022\030\n\020burnsale_balance\030\004"
  " \001(\004\022\020\n\010xayaname\030\005 \001(\tB\003\370\001\001"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fxaya_5fplayer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fxaya_5fplayer_2eproto = {
  false, false, 147, descriptor_table_protodef_proto_2fxaya_5fplayer_2eproto, "proto/xaya_player.proto", 
  &descriptor_table_proto_2fxaya_5fplayer_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_proto_2fxaya_5fplayer_2eproto::offsets,
  file_level_metadata_proto_2fxaya_5fplayer_2eproto, file_level_enum_descriptors_proto_2fxaya_5fplayer_2eproto, file_level_service_descriptors_proto_2fxaya_5fplayer_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_proto_2fxaya_5fplayer_2eproto_getter() {
  return &descriptor_table_proto_2fxaya_5fplayer_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_proto_2fxaya_5fplayer_2eproto(&descriptor_table_proto_2fxaya_5fplayer_2eproto);
namespace pxd {
namespace proto {

// ===================================================================

class XayaPlayer::_Internal {
 public:
  using HasBits = decltype(std::declval<XayaPlayer>()._has_bits_);
  static void set_has_notused(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_balance(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_burnsale_balance(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_xayaname(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

XayaPlayer::XayaPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pxd.proto.XayaPlayer)
}
XayaPlayer::XayaPlayer(const XayaPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xayaname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_xayaname()) {
    xayaname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xayaname(), 
      GetArena());
  }
  ::memcpy(&notused_, &from.notused_,
    static_cast<size_t>(reinterpret_cast<char*>(&burnsale_balance_) -
    reinterpret_cast<char*>(&notused_)) + sizeof(burnsale_balance_));
  // @@protoc_insertion_point(copy_constructor:pxd.proto.XayaPlayer)
}

void XayaPlayer::SharedCtor() {
xayaname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&notused_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&burnsale_balance_) -
    reinterpret_cast<char*>(&notused_)) + sizeof(burnsale_balance_));
}

XayaPlayer::~XayaPlayer() {
  // @@protoc_insertion_point(destructor:pxd.proto.XayaPlayer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void XayaPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xayaname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void XayaPlayer::ArenaDtor(void* object) {
  XayaPlayer* _this = reinterpret_cast< XayaPlayer* >(object);
  (void)_this;
}
void XayaPlayer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void XayaPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void XayaPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:pxd.proto.XayaPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    xayaname_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&notused_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&burnsale_balance_) -
        reinterpret_cast<char*>(&notused_)) + sizeof(burnsale_balance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* XayaPlayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 notused = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_notused(&has_bits);
          notused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_role(&has_bits);
          role_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 balance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_balance(&has_bits);
          balance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 burnsale_balance = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_burnsale_balance(&has_bits);
          burnsale_balance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string xayaname = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_xayaname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pxd.proto.XayaPlayer.xayaname");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* XayaPlayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pxd.proto.XayaPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 notused = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_notused(), target);
  }

  // optional uint32 role = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role(), target);
  }

  // optional uint64 balance = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_balance(), target);
  }

  // optional uint64 burnsale_balance = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_burnsale_balance(), target);
  }

  // optional string xayaname = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_xayaname().data(), static_cast<int>(this->_internal_xayaname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pxd.proto.XayaPlayer.xayaname");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_xayaname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pxd.proto.XayaPlayer)
  return target;
}

size_t XayaPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pxd.proto.XayaPlayer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string xayaname = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_xayaname());
    }

    // optional uint32 notused = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_notused());
    }

    // optional uint32 role = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role());
    }

    // optional uint64 balance = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_balance());
    }

    // optional uint64 burnsale_balance = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_burnsale_balance());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XayaPlayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pxd.proto.XayaPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const XayaPlayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<XayaPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pxd.proto.XayaPlayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pxd.proto.XayaPlayer)
    MergeFrom(*source);
  }
}

void XayaPlayer::MergeFrom(const XayaPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pxd.proto.XayaPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_xayaname(from._internal_xayaname());
    }
    if (cached_has_bits & 0x00000002u) {
      notused_ = from.notused_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_ = from.role_;
    }
    if (cached_has_bits & 0x00000008u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000010u) {
      burnsale_balance_ = from.burnsale_balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XayaPlayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pxd.proto.XayaPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XayaPlayer::CopyFrom(const XayaPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pxd.proto.XayaPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XayaPlayer::IsInitialized() const {
  return true;
}

void XayaPlayer::InternalSwap(XayaPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  xayaname_.Swap(&other->xayaname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(XayaPlayer, burnsale_balance_)
      + sizeof(XayaPlayer::burnsale_balance_)
      - PROTOBUF_FIELD_OFFSET(XayaPlayer, notused_)>(
          reinterpret_cast<char*>(&notused_),
          reinterpret_cast<char*>(&other->notused_));
}

::PROTOBUF_NAMESPACE_ID::Metadata XayaPlayer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_proto_2fxaya_5fplayer_2eproto_getter, &descriptor_table_proto_2fxaya_5fplayer_2eproto_once,
      file_level_metadata_proto_2fxaya_5fplayer_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace pxd
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pxd::proto::XayaPlayer* Arena::CreateMaybeMessage< ::pxd::proto::XayaPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pxd::proto::XayaPlayer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
